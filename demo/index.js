
import { Con, Row, Col } from 'bee-layout';
import { Panel } from 'bee-panel';
import Button from 'bee-button';
import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import Slider from '../src';


const CARET = <i className="uf uf-arrow-down"></i>;

const CARETUP = <i className="uf uf-arrow-up"></i>;


var Demo1 = require("./demolist/Demo1");var Demo2 = require("./demolist/Demo2");var Demo3 = require("./demolist/Demo3");var Demo4 = require("./demolist/Demo4");var Demo5 = require("./demolist/Demo5");var Demo6 = require("./demolist/Demo6");var Demo7 = require("./demolist/Demo7");var Demo8 = require("./demolist/Demo8");var DemoArray = [{"example":<Demo1 />,"title":" 标准slider","code":"/**\n*\n* @title 标准slider\n* @description 基础的slider\n*\n*/\n\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nconst style = { width: 600, margin: 50 ,marginBottom:60};\nclass Demo1 extends Component {\n\t\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={style}>\n\t\t\t\t  <p>Basic Slider，`step默认1`</p>\n\t\t\t\t  <Slider defaultValue={20} onAfterChange={this.log}/>\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t  <p>Basic Slider，step=20</p>\n\t\t\t\t  <Slider step={20} defaultValue={40} onAfterChange={this.log} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t  <p>Basic Slider, disabled</p>\n\t\t\t\t   <Slider disabled defaultValue={60} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t  <p>Controlled Slider，不可改变</p>\n\t\t\t\t  <Slider value={40} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\n","desc":" 基础的slider"},{"example":<Demo2 />,"title":" 带有dots的slider(dots间","code":"/**\n*\n* @title 带有dots的slider(dots间距同step)\n* @description 基础的slider\n*\n*/\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nclass Demo2 extends Component {\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t\tconst style = {width:600,marginLeft:50,marginBottom:60}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Basic Slider，`step=20, dots `</p>\n\t\t\t\t\t<Slider dots step={20} defaultValue={60} onAfterChange={this.log} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Basic Slider，`step=10, dots, dotStyle={\"{borderColor: 'orange'}\"}, activeDotStyle={\"{borderColor: 'yellow'}\"}`</p>\n\t\t\t\t\t<Slider dots step={10} defaultValue={100} onAfterChange={this.log} dotStyle={{ borderColor: 'orange' }} activeDotStyle={{ borderColor: 'yellow' }} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","desc":" 基础的slider"},{"example":<Demo3 />,"title":" 自定义slider","code":"/**\n*\n* @title 自定义slider\n* @description 自定义slider样式（track,handle,rail等样式自定义）\n*\n*/\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nclass Demo3 extends Component {\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t\tlet style={width:600,marginLeft:50,marginBottom:60}\n\t\treturn (\n\t\t\t<div style={style}>\n\t\t\t\t<p>Slider with custom handle and track style.</p>\n\t\t\t\t<Slider\n\t\t\t\tdefaultValue={30}\n\t\t\t\ttrackStyle={{ backgroundColor: 'blue', height: 10 }}\n\t\t\t\thandleStyle={{\n\t\t\t\tborderColor: 'blue',\n\t\t\t\theight: 28,\n\t\t\t\twidth: 28,\n\t\t\t\tmarginLeft: -14,\n\t\t\t\tmarginTop: -9,\n\t\t\t\tbackgroundColor: 'pink',\n\t\t\t\t}}\n\t\t\t\trailStyle={{ backgroundColor: 'red', height: 10 }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","desc":" 自定义slider样式（track,handle,rail等样式自定义）"},{"example":<Demo4 />,"title":" 带有marks的slider","code":"/**\n*\n* @title 带有marks的slider\n* @description 带有marks标签的step\n*\n*/\n\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nclass Demo4 extends Component {\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t\tlet style={width:600,marginLeft:50,marginBottom:60};\n\t\tconst marks = {\n\t\t\t'-10': '-10°C',\n\t\t\t0: <strong>0°C</strong>,\n\t\t\t26: '26°C',\n\t\t\t47: '47°C',\n\t\t\t100: {\n\t\t\t\tstyle: {\n\t\t\t\tcolor: 'red',\n\t\t\t\t},\n\t\t\t\tlabel: <strong>100°C</strong>\n\t\t\t}\n\t\t};\n\n\t\tconst marksOther = {\n\t\t\t0: <strong>0°C</strong>,\n\t\t\t33: '33°C',\n\t\t\t87: '87°C',\n\t\t\t100: {\n\t\t\t\tstyle: {\n\t\t\t\tcolor: 'red',\n\t\t\t\t},\n\t\t\t\tlabel: <strong>100°C</strong>\n\t\t\t}\n\t\t};\n\t\t\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（1）Slider with marks,`steps默认是1`</p>\n\t\t\t\t\t\t<Slider min={-10} marks={marks} defaultValue={33} onChange={this.log}  />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（2）Slider with marks and `steps=20`</p>\n\t\t\t\t\t\t<Slider min={0} marks={marksOther} step={20} defaultValue={58} onChange={this.log} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（3）Slider with marks and `dots steps=20`</p>\n\t\t\t\t\t\t<Slider dots min={0} marks={marksOther} step={20} defaultValue={58} onChange={this.log} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（4）Slider with marks, `step=null`，因此step = marks</p>\n\t\t\t\t\t\t<Slider min={0} marks={marksOther} step={null} defaultValue={68} onChange={this.log}  />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（5）Slider with marks, `included=false`</p>\n\t\t\t\t\t\t<Slider min={0} marks={marksOther} included={false} defaultValue={20} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（6）Slider with marks and `steps=10,included=false`</p>\n\t\t\t\t\t\t<Slider min={-10} marks={marks} step={10} included={false} defaultValue={20} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（7）Range with marks</p>\n\t\t\t\t\t\t<Slider.Range min={-10} marks={marks} onChange={this.log} defaultValue={[20, 40]} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<p>（8）Range with marks and steps</p>\n\t\t\t\t\t\t<Slider.Range min={-10} marks={marks} step={10} onChange={this.log} defaultValue={[20, 40]} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\n","desc":" 带有marks标签的step"},{"example":<Demo5 />,"title":" rangeSlider","code":"/**\n*\n* @title rangeSlider\n* @description 数组变化的slider\n*\n*/\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nclass PureRenderRange extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  handleChange = (value) => {\n    console.log(value);\n  }\n\n  render() {\n    return (\n      <Slider.Range defaultValue={[20, 40, 60, 80]} onChange={this.handleChange} allowCross={false} />\n    );\n  }\n}\n\nclass Demo5 extends Component {\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t\tlet style={width:600,marginLeft:50,marginBottom:60}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Basic Range，`allowCross=false step默认是1 defaultValue=[0, 20]`</p>\n\t\t\t\t\t<Slider.Range allowCross={false} defaultValue={[0, 20]} onChange={this.log} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Basic Range，`allowCross=true step默认是1 defaultValue=[10, 40]`</p>\n\t\t\t\t\t<Slider.Range defaultValue={[10, 40]} onChange={this.log} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Basic Range，`disabled defaultValue=[0, 20]`</p>\n\t\t\t\t\t<Slider.Range allowCross={false} defaultValue={[0, 20]} onChange={this.log} disabled />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Basic Range，`step=20 defaultValue=[20, 80]` </p>\n\t\t\t\t\t<Slider.Range step={20} defaultValue={[20, 80]} onBeforeChange={this.log} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Basic Range，`step=20, dots defaultValue=[20, 40]` </p>\n\t\t\t\t\t<Slider.Range dots step={20} defaultValue={[20, 40]} onAfterChange={this.log} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Range as child component</p>\n\t\t\t\t\t<PureRenderRange />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","desc":" 数组变化的slider"},{"example":<Demo6 />,"title":" 竖直方向的slider","code":"/**\n*\n* @title 竖直方向的slider\n* @description 竖直vertical\n*\n*/\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nclass Demo6 extends Component {\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t  const style={float: 'left',height: 400, marginBottom: 160, marginLeft: 50,width:200}\n\t  const parentStyle = { overflow: 'hidden' };\n\t\tconst marks = {\n\t\t\t0: <strong>0°C</strong>,\n\t\t\t26: '26°C',\n\t\t\t47: '47°C',\n\t\t\t100: {\n\t\t\t\tstyle: {\n\t\t\t\tcolor: 'red',\n\t\t\t\t},\n\t\t\t\tlabel: <strong>100°C</strong>\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div style={parentStyle}>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Slider with `marks, step=null`</p>\n\t\t\t\t\t<Slider vertical min={0} marks={marks} step={null} onChange={this.log} defaultValue={20} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Slider with `marks and steps=25`</p>\n\t\t\t\t\t<Slider vertical dots min={0} marks={marks} step={25} onChange={this.log} defaultValue={20} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Slider with `marks and steps默认是1 included=false`</p>\n\t\t\t\t\t<Slider vertical min={0} marks={marks} included={false} defaultValue={20} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Range with `marks steps默认是1,`</p>\n\t\t\t\t\t<Slider.Range vertical min={0} marks={marks} onChange={this.log} defaultValue={[20, 40]} />\n\t\t\t\t</div>\n\t\t\t\t<div style={style}>\n\t\t\t\t\t<p>Range with `marks and steps=10`</p>\n\t\t\t\t\t<Slider.Range vertical min={0} marks={marks} step={10}onChange={this.log} defaultValue={[20, 40]}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","desc":" 竖直vertical"},{"example":<Demo7 />,"title":" 带输入框的slider","code":"/**\n*\n* @title 带输入框的slider\n* @description 和 数字输入框 组件保持同步。\n*\n*/\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nclass CustomizedSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value:45\n    };\n  }\n  onInputChange = (e) =>{\n    //console.log(e.target.value)\n    let value = parseInt(e.target.value);\n    if(value >= 100){\n      value = 100;\n    }else if(value <= 0 || e.target.value == ''){\n      value = 0;\n    }\n    this.changeValue(value)\n  }\n\n  onSliderChange = (value) => {\n    //console.log(value);\n    this.changeValue(value)\n  }\n  \n  changeValue = (value) =>{\n    this.setState({\n      value:value\n    })\n  }\n  render() {\n    return (\n      <div>\n        <input type=\"number\" value={this.state.value} onChange={this.onInputChange} />\n        <br /><br />\n        <Slider value={this.state.value} onChange={this.onSliderChange} />\n      </div>\n    );\n  }\n}\n\nclass CustomizedRange extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lowerBound: 20,\n      upperBound: 40,\n      value: [20, 40],\n    };\n  }\n\n  onLowerBoundChange = (e) => {\n    let upperBound = this.state.upperBound;\n    let value = parseInt(e.target.value);\n\n    if(value > upperBound){\n      value = upperBound\n    }else if(value <0 || value == ''){\n      value = 0;\n    }\n\n    this.setValue(value,upperBound);\n  }\n\n  onUpperBoundChange = (e) => {\n    let lowerBound = this.state.lowerBound;\n    let value = parseInt(e.target.value);\n\n    if(value < lowerBound){\n      value = lowerBound\n    }else if( value > 100 ){\n      value = 100;\n    }\n    this.setValue(lowerBound,value);\n  }\n  \n  onSliderChange = (value) => {\n    let upperBound = value[1];\n    let lowerBound = value[0];\n    this.setValue(lowerBound,upperBound);\n  }\n  \n  setValue = (lowerBound,upperBound) =>{\n    this.setState({\n      lowerBound:lowerBound,\n      upperBound:upperBound,\n      value:[lowerBound, upperBound] \n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <label>LowerBound: </label>\n        <input type=\"number\" value={this.state.lowerBound} onChange={this.onLowerBoundChange} />\n        <br />\n        <label>UpperBound: </label>\n        <input type=\"number\" value={this.state.upperBound} onChange={this.onUpperBoundChange} />\n        <br /><br />\n        <Slider.Range value={this.state.value} onChange={this.onSliderChange} />\n      </div>\n    );\n  }\n}\n\nclass Demo7 extends Component {\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t\tlet style={width:600,marginLeft:50,marginBottom:60}\n\t\treturn (\n\t\t\t<div>\n        <div style={style}>\n          <p>Customized Range</p>\n          <CustomizedSlider />\n        </div>\n\t\t\t\t<div style={style}>\n  \t\t\t\t<p>Customized Range</p>\n  \t\t\t\t<CustomizedRange />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","desc":" 和 数字输入框 组件保持同步。"},{"example":<Demo8 />,"title":" 带tip的slider","code":"/**\n*\n* @title 带tip的slider\n* @description 和 tip展示 组件保持同步。\n*\n*/\n\nimport React, { Component } from 'react';\nimport Slider from 'bee-slider';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst RangeTooltip = createSliderWithTooltip(Slider.Range);\nconst SliderTooltip = createSliderWithTooltip(Slider);\n\nclass Demo8 extends Component {\n\tlog = (value) =>{\n\tconsole.log(value); //eslint-disable-line\n\t}\n\n\trender () {\n\t\tconst wrapperStyle = { width: 400, margin: 50 };\n\t\treturn (\n      <div>\n        <div style={wrapperStyle}>\n          <p>Slider with Tooltip</p>\n          <SliderTooltip min={0} max={100} defaultValue={45} tipFormatter={value => `${value}%%`}/>\n        </div>\n        <div style={wrapperStyle}>\n          <p>Range with Tooltip</p>\n          <RangeTooltip min={0} max={20} defaultValue={[3, 10]} tipFormatter={value => `${value}%`} />\n        </div>\n      </div>\n\t\t)\n\t}\n}\n\n","desc":" 和 tip展示 组件保持同步。"}]


class Demo extends Component {
    constructor(props){
        super(props);
        this.state = {
            open: false
        }
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick() {
        this.setState({ open: !this.state.open })
    }

    render () {
        const { title, example, code, desc  } = this.props;
        let caret = this.state.open ? CARETUP : CARET;
        let text = this.state.open ? "隐藏代码" : "查看代码";

        const footer = (
            <Button shape="block" onClick={ this.handleClick }>
                { caret }
                { text }
            </Button>
        );
        return (
            <Col md={12} >
                <h3>{ title }</h3>
                <p>{ desc }</p>
                <Panel collapsible headerContent expanded={ this.state.open } colors='bordered' header={ example } footer={footer} footerStyle = {{padding: 0}}>
                    <pre><code className="hljs javascript">{ code }</code></pre>
                </Panel>
            </Col>
        )
    }
}

class DemoGroup extends Component {
    constructor(props){
        super(props)
    }
    render () {
        return (
                <Row>
                    {DemoArray.map((child,index) => {

                        return (
                            <Demo example= {child.example} title= {child.title} code= {child.code} desc= {child.desc} key= {index}/>
                        )

                    })}
                </Row>
        )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('tinperBeeDemo'));
